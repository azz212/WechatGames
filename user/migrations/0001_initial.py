# Generated by Django 2.1.5 on 2020-09-08 05:44

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('openid', models.CharField(blank=True, help_text='微信OpenID', max_length=100, null=True, verbose_name='微信OpenID')),
                ('unionId', models.CharField(blank=True, help_text='不同app之间区分用户', max_length=100, null=True, verbose_name='唯一标识')),
                ('avatar_url', models.URLField(blank=True, help_text='头像', null=True, verbose_name='头像')),
                ('nick_name', models.CharField(blank=True, default='未知玩家', help_text='昵称', max_length=100, null=True, verbose_name='昵称')),
                ('gender', models.SmallIntegerField(blank=True, choices=[(1, '男'), (2, '女'), (0, '未知')], help_text='性别', null=True, verbose_name='性别')),
                ('language', models.CharField(blank=True, help_text='语言', max_length=100, null=True, verbose_name='语言')),
                ('city', models.CharField(blank=True, help_text='城市', max_length=200, null=True, verbose_name='城市')),
                ('province', models.CharField(blank=True, help_text='省份', max_length=200, null=True, verbose_name='省份')),
                ('country', models.CharField(blank=True, help_text='国家', max_length=200, null=True, verbose_name='国家')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('login', models.DateTimeField(auto_now_add=True, verbose_name='登录时间')),
                ('last_login', models.DateTimeField(null=True, verbose_name='上次登录时间')),
                ('date_of_birth', models.DateField(blank=True, help_text='出生日期', null=True, verbose_name='出生日期')),
                ('desc', models.TextField(blank=True, help_text='描述', max_length=2000, null=True, verbose_name='描述')),
                ('is_auth', models.BooleanField(default=False, help_text='是否被授权', verbose_name='是否被授权')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ('-login',),
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unionId', models.CharField(help_text='用户唯一标识', max_length=200, verbose_name='用户标识')),
                ('human', models.CharField(help_text='收货人', max_length=200, verbose_name='收货人')),
                ('phone', models.CharField(help_text='电话号码', max_length=20, verbose_name='电话号码')),
                ('address', models.CharField(help_text='收货地址', max_length=200, verbose_name='收货地址')),
                ('is_show', models.BooleanField(default=True, help_text='用户删除不做物理删除', verbose_name='是否删除')),
            ],
            options={
                'verbose_name': '收货地址',
                'verbose_name_plural': '收货地址',
            },
        ),
        migrations.CreateModel(
            name='APP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.FileField(default='img-slide-5.jpg', help_text='分享页面的图片', null=True, upload_to='game', verbose_name='图片')),
                ('name', models.CharField(help_text='游戏名称,尽量不用中文, 每次请求携带', max_length=100, verbose_name='游戏名字')),
                ('app_id', models.CharField(help_text='小游戏发布微信平台配置，获取用户信息必须', max_length=100, verbose_name='APP_ID')),
                ('secret', models.CharField(help_text='小游戏发布微信平台配置，获取用户信息必须', max_length=200, verbose_name='密钥')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
            },
        ),
        migrations.CreateModel(
            name='App_config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='增加配置变量名', max_length=200, null=True, verbose_name='变量名')),
                ('type', models.CharField(blank=True, help_text='启动参数类型', max_length=200, null=True, verbose_name='类型')),
                ('value', models.CharField(blank=True, help_text='启动参数的值', max_length=200, null=True, verbose_name='值')),
                ('description', models.CharField(blank=True, help_text='启动参数描述，说明', max_length=200, null=True, verbose_name='参数说明')),
                ('orther', models.CharField(blank=True, help_text='其他', max_length=100, null=True, verbose_name='其他')),
                ('on_line', models.BooleanField(default=True, verbose_name='是否启动')),
                ('app_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='app_config', to='user.APP', verbose_name='所属app')),
            ],
            options={
                'verbose_name': '项目配置',
                'verbose_name_plural': '项目配置',
            },
        ),
        migrations.CreateModel(
            name='Userip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=30, verbose_name='IP地址')),
                ('count', models.IntegerField(default=0, verbose_name='访问次数')),
                ('area', models.CharField(help_text='地区', max_length=200, verbose_name='地区')),
                ('country', models.CharField(help_text='国家', max_length=200, verbose_name='国家')),
                ('province', models.CharField(help_text='省份', max_length=200, verbose_name='省份')),
                ('city', models.CharField(help_text='城市', max_length=200, verbose_name='城市')),
                ('LaL', models.CharField(help_text='经纬度', max_length=200, verbose_name='经纬度')),
                ('Tl', models.CharField(help_text='时区', max_length=200, verbose_name='时区')),
            ],
            options={
                'verbose_name': '游戏访问用户ip',
                'verbose_name_plural': '游戏访问用户ip',
            },
        ),
    ]
